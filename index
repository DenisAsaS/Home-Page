<!--–®–∏—Ä–æ–∫–æ–≤ –î–µ–Ω–∏—Å-->
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–£–º–Ω—ã–π –¥–æ–º</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            text-align: center;
            background: linear-gradient(to right, #141e30, #243b55);
            color: white;
        }
        .tabs {
            display: flex;
            justify-content: center;
            background: rgba(0, 0, 0, 0.8);
            padding: 15px;
            border-bottom: 3px solid #00c6ff;
        }
        .tab {
            padding: 12px 24px;
            color: white;
            cursor: pointer;
            transition: 0.3s;
            font-weight: bold;
            border-radius: 10px;
        }
        .tab:hover {
            color: #00c6ff;
            transform: scale(1.1);
            background: rgba(255, 255, 255, 0.1);
        }
        .content {
            display: none;
            padding: 20px;
            background: rgba(255, 255, 255, 0.1);
            margin: 20px auto;
            border-radius: 15px;
            width: 80%;
            max-width: 600px;
            box-shadow: 0 0 20px rgba(0, 198, 255, 0.3);
            transition: 0.5s;
        }
        .active {
            display: block;
        }
        h2 {
            color: #00c6ff;
            text-shadow: 2px 2px 10px rgba(0, 198, 255, 0.5);
        }
        button {
            background: linear-gradient(45deg, #00c6ff, #0072ff);
            border: none;
            padding: 12px 24px;
            color: white;
            font-size: 18px;
            border-radius: 12px;
            cursor: pointer;
            transition: 0.3s;
            margin: 10px;
            box-shadow: 0 4px 10px rgba(0, 198, 255, 0.3);
        }
        button:hover {
            background: linear-gradient(45deg, #0072ff, #00c6ff);
            transform: scale(1.1);
        }
    </style>
</head>
<body>
    <div class="tabs">
        <div class="tab" onclick="showTab('home')">üè† –ì–ª–∞–≤–Ω–∞—è</div>
        <div class="tab" onclick="showTab('lighting')">üí° –û—Å–≤–µ—â–µ–Ω–∏–µ</div>
        <div class="tab" onclick="showTab('climate')">üå°Ô∏è –ö–ª–∏–º–∞—Ç</div>
        <div class="tab" onclick="showTab('security')">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</div>
        <div class="tab" onclick="showTab('settings')">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</div>
    </div>
    
    <div id="home" class="content active" onload="getWeather('–©—É—á–∏–Ω—Å–∫')">
            <div class="container">
			<body onload="getWeather('–©—É—á–∏–Ω—Å–∫')">
			<div id="weather" class="weather-card"></div>
            <input type="text" id="city" placeholder="–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥" value="–©—É—á–∏–Ω—Å–∫">
            <button onclick="getWeather()">–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥</button>
    </div>
    <div id="lighting" class="content">
        <h2>üí° –û—Å–≤–µ—â–µ–Ω–∏–µ</h2>
        <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–º –≤ –¥–æ–º–µ.</p>
        <button onclick="toggleLight(true)">üîÜ –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç</button>
        <button onclick="toggleLight(false)">üí° –í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç</button>
    </div>
    <div id="climate" class="content">
        <h2>üå°Ô∏è –ö–ª–∏–º–∞—Ç</h2>
        <p>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <span id="temperature">–ó–∞–≥—Ä—É–∑–∫–∞...</span>¬∞C üåû</p>
        <p>–í–ª–∞–∂–Ω–æ—Å—Ç—å: <span id="humidity">–ó–∞–≥—Ä—É–∑–∫–∞...</span>% üíß</p>
    </div>
    <div id="security" class="content">
        <h2>üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h2>
        <p>–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞–º–µ—Ä, –∑–∞–º–∫–æ–≤.</p>
    </div>
    <div id="settings" class="content">
        <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
        <p>Wi-Fi, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã.</p>
    </div>
    
    <script>
        function showTab(tabId) {
            document.querySelectorAll('.content').forEach(el => el.classList.remove('active'));
            document.getElementById(tabId).classList.add('active');
        }
        async function getWeather(defaultCity) {
            const apiKey = '96dc0cfa62f12fa2d223de62d3cbac83';
            const cityInput = document.getElementById('city');
            const city = defaultCity || cityInput.value;
            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=ru`;
            
            try {
                const response = await fetch(url);
                const data = await response.json();
                if (data.cod === 200) {
                    document.getElementById('weather').innerHTML = `
                        <p>–í –≥–æ—Ä–æ–¥–µ <strong>${data.name}, ${data.sys.country}</strong></p>
                        <p>${data.weather[0].description}</p>
                        <p>üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <span class='seven-segment'>${data.main.temp}¬∞C</span></p>
                        <p>üå°Ô∏è –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: <span class='seven-segment'>${data.main.feels_like}¬∞C</span></p>
                        <p>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${data.main.humidity}%</p>
                        <p>üå¨Ô∏è –í–µ—Ç–µ—Ä: ${data.wind.speed} –º/—Å</p>
                    `;
                } else {
                    document.getElementById('weather').innerHTML = `<p>–û—à–∏–±–∫–∞: ${data.message}</p>`;
                }
            } catch (error) {
                document.getElementById('weather').innerHTML = '<p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.</p>';
            }
        }
    </script>
</body>
</html>
